import * as aws from "@pulumi/aws";
import { PolicyPack } from "@pulumi/policy";
import * as policies from "@bobcatt/pulumi-policies";

new PolicyPack("policy-pack-bb5ac361-dc16-4bfe-af4f-78b290241862", {
    policies: [
        policies.aws.cloudfront.Distribution.LoggingEnabled,
        policies.aws.cloudfront.Distribution.noUncryptedTraffic,
        policies.aws.cloudfront.Distribution.originSecureTLSConfigured,
        policies.aws.cloudfront.Distribution.originSecureTLSEnabled,
        policies.aws.cloudfront.Distribution.secureTLSConfigured,
        policies.aws.cloudfront.Distribution.wafConfigured,
        policies.aws.ebs.Volume.customerManagedKey,
        policies.aws.ebs.Volume.noUnencryptedVolume,
        policies.aws.ec2.Instance.noPublicIp,
        policies.aws.ec2.Instance.noUnencryptedBlockDevice,
        policies.aws.ec2.Instance.noUnencryptedRootBlockDevice,
        policies.aws.ec2.LaunchConfiguration.noPublicIp,
        policies.aws.ec2.LaunchConfiguration.noUnencryptedBlockDevice,
        policies.aws.ec2.LaunchConfiguration.noUnencryptedRootBlockDevice,
        policies.aws.ec2.LaunchTemplate.noPublicIp,
        policies.aws.ec2.LaunchTemplate.noUnencryptedBlockDevice,
        policies.aws.ec2.SecurityGroup.missingDescription,
        policies.aws.ec2.SecurityGroup.prohibitInboundHttpTraffic,
        policies.aws.ec2.SecurityGroup.prohibitPublicInternetAccess,
        policies.aws.ecr.Repository.customerManagedKey,
        policies.aws.ecr.Repository.imageScans,
        policies.aws.ecr.Repository.immutableImage,
        policies.aws.ecr.Repository.noUnencryptedRepository,
        policies.aws.lambda.Function.tracingEnabled,
        policies.aws.lambda.Permission.sourceArn,
        policies.aws.rds.Cluster.backupRetention,
        policies.aws.rds.ClusterInstance.performanceInsights,
        policies.aws.rds.ClusterInstance.performanceInsightsEncrypted,
        policies.aws.rds.ClusterInstance.publicAccess,
        policies.aws.rds.Cluster.storageCustomerManagedKey,
        policies.aws.rds.Cluster.storageEncrypted,
        policies.aws.rds.Instance.BackupRetention,
        policies.aws.rds.Instance.ClassicResources,
        policies.aws.rds.Instance.performanceInsights,
        policies.aws.rds.Instance.performanceInsightsEncrypted,
        policies.aws.rds.Instance.publicAccess,
        policies.aws.rds.Instance.storageCustomerManagedKey,
        policies.aws.rds.Instance.storageEncrypted,
        policies.aws.s3.Bucket.noPublicRead,
        policies.aws.s3.Bucket.replicationEnabled,
        policies.aws.s3.Bucket.serverSideEncryption,
        policies.aws.s3.Bucket.serverSideEncryptionBucketKey,
        policies.aws.s3.Bucket.serverSideEncryptionKMS,
        policies.aws.s3.Bucket.serverSideEncryptionKMSWithCustomerManagedKey,
        policies.kubernetes.apps.v1.Deployment.minimumReplicaCount,
        policies.kubernetes.apps.v1.Deployment.recommendedLabel,
        policies.kubernetes.apps.v1.ReplicaSet.minimumReplicaCount,
        policies.kubernetes.apps.v1.ReplicaSet.recommendedLabel,
        policies.kubernetes.core.v1.Pod.prohibitPod,
        policies.kubernetes.core.v1.Service.recommendedLabel,
    ],
});
